{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "wallet-connect-button",
  "type": "registry:ui",
  "title": "Wallet Connect Button",
  "description": "A Solana wallet connection button built on Once UI Button.",
  "dependencies": [
    "@solana/wallet-adapter-react",
    "@solana/wallet-adapter-react-ui",
    "@solana/wallet-adapter-wallets",
    "@solana/web3.js",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "src/registry/default/ui/wallet/wallet-connect-button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@once-ui-system/core\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\n// Extend Once UI Button variants for Solana-specific styling\nconst walletButtonVariants = cva(\n  \"inline-flex items-center justify-center rounded-md transition-colors\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-gradient-to-r from-purple-500 to-blue-500 text-white hover:from-purple-600 hover:to-blue-600\",\n        outline:\n          \"border-2 border-purple-500 text-purple-500 hover:bg-purple-50\",\n        ghost: \"text-purple-600 hover:bg-purple-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-8 px-3 text-sm\",\n        lg: \"h-12 px-6 text-lg\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface WalletConnectButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof walletButtonVariants> {\n  onConnect?: () => void;\n  onDisconnect?: () => void;\n  showBalance?: boolean;\n}\n\nexport const WalletConnectButton = React.forwardRef<\n  HTMLButtonElement,\n  WalletConnectButtonProps\n>(\n  (\n    {\n      className,\n      variant,\n      size,\n      onConnect,\n      onDisconnect,\n      showBalance,\n      ...props\n    },\n    ref,\n  ) => {\n    const { connected, connecting, publicKey, disconnect } = useWallet();\n\n    const handleClick = async () => {\n      if (connected) {\n        await disconnect();\n        onDisconnect?.();\n      } else {\n        // Trigger wallet selection modal\n        onConnect?.();\n      }\n    };\n\n    return (\n      <Button\n        ref={ref}\n        className={cn(walletButtonVariants({ variant, size }), className)}\n        onClick={handleClick}\n        disabled={connecting}\n        {...props}\n      >\n        {connecting ? (\n          \"Connecting...\"\n        ) : connected ? (\n          <>\n            {showBalance && publicKey && (\n              <span className=\"mr-2\">\n                {publicKey.toString().slice(0, 4)}...\n                {publicKey.toString().slice(-4)}\n              </span>\n            )}\n            Disconnect\n          </>\n        ) : (\n          \"Connect Wallet\"\n        )}\n      </Button>\n    );\n  },\n);\n\nWalletConnectButton.displayName = \"WalletConnectButton\";\n",
      "type": "registry:ui",
      "target": "components/soldevkit-ui/wallet/wallet-connect-button.tsx"
    }
  ]
}